docker info
docker version
docker container run -d -p 80:80 --name
============================
ADD DOCKER in USER GROUP

sudo usermod -a -G docker $USER
==============================
ps aux | grep nginx


docker container run -d -p 80:80 --name himnginx nginix   ==>> container started

docker container run -d -p 8080:80 --name himwebserver httpd 

docker container run -d -p 3306:3306 --name himsqldb --env MYSQL_RANDOM_ROOT_PASSWORD=yes mysql:latest
<> to find password  docker container logs himsqldb

docker container inspect <imagename>
=====================
If we want to go inside the container

docker container run -it --name himimage nginix /bin/bash

docker container exec -it <Conatiner-ID>

NETWORKING IN DOCKER
docker network ls

docker network -f driver=bridge
docker network ls --formate "{{.ID}}: {{.Driver}}"
docker network create himnetwork
ex-
docker container run -d --name himcont --network himnetwork -p 8000:80 nginix:latest

communication of two container

docker container exec -it image1 ping image2
===================
DOCKER fILE

docker build -T IMAGENAME:TAGNAME . 

========================================

Volumes and Mounts

docker run -d --name himsql -e MYSQL_ALLOW_EMPTY_PASSWORD=True --mount source=mysql-db,destination=/var/lib/mysql mysql:latest
docker volume ls

Bind-Mounts
 
docker container run -d --name nginxbind --mount type=bind,source=$(pwd),target=/app nginx:latest   
=========
Assignment of persist database

docker container run -d --name=mysql-test -e "MY_SQL_ROOT_PASSWORD=mypassword" --mount source=mysql-db,target=my/lib/mysql mysql:8.0
docker volume ls

to connect database we need to find container IP and put in command

docker volume inspect <ID>
apt-get install mysql-client
mysql -u root -pmypassword -h 172.17.0.2 -p 3306

Remove the container and ADD same volume in different container

docker container run -d --name=mysql-test -e "MY_SQL_ROOT_PASSWORD=mypassword" --mount source=mysql-db,target=my/lib/mysql mysql:8.0.15

=========
